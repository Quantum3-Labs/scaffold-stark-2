{
  "name": "@ss-2/snfoundry_dev",
  "version": "0.0.1",
  "scripts": {
    "chain": "starknet-devnet --seed 0 --account-class cairo1",
    "deploy:devnet": "cd contracts && scarb build && sncast --url $RPC_URL_DEVNET --account \"$1\" script run cairoscripts --package cairoscripts && ts-node ../scripts-ts/helpers/parse-deployments.ts",
    "deploy:sepolia": "cd contracts && scarb build && sncast --url $RPC_URL_SEPOLIA --account \"1\" script run cairoscripts --package cairoscripts && ts-node ../scripts-ts/helpers/parse-deployments.ts --network sepolia",
    "add-account:devnet": "cd contracts && sncast --url $RPC_URL_DEVNET account add --name \"$1\" --address $ACCOUNT_ADDRESS_DEVNET --private-key $PRIVATE_KEY_DEVNET --type oz --add-profile \"$1\"",
    "add-account:sepolia": "cd contracts && sncast --url $RPC_URL_SEPOLIA account add --name \"$1\" --address $ACCOUNT_ADDRESS_SEPOLIA --private-key $PRIVATE_KEY_SEPOLIA --type oz --add-profile \"$1\"",
    "test": "cd contracts && snforge test",
    "test-eslint": "node eslint-contract-name/eslint-plugin-contract-names.test.js",
    "compile": "cd contracts && scarb build",
    "format": "prettier --write 'scripts-ts/**/*.{ts,tsx}' && cd contracts && scarb fmt",
    "format:check": "prettier --check 'scripts-ts/**/*.{ts,tsx}' && cd contracts && scarb fmt --check",
    "postinstall": "shx cp -n .env.example .env"
  },
  "devDependencies": {
    "@types/node": "^20",
    "@types/prettier": "^2",
    "@types/yargs": "^17.0.32",
    "globals": "^15.8.0",
    "shx": "^0.3.4",
    "ts-node": "^10.9.2",
    "typescript": "^5",
    "typescript-eslint": "^7.16.1",
    "yargs": "^17.7.2"
  },
  "dependencies": {
    "dotenv": "^16.3.1",
    "dotenv-cli": "^7.4.2",
    "envfile": "^6.18.0",
    "prettier": "^2.8.8",
    "starknet": "6.7.0",
    "toml": "^3.0.0",
    "tslib": "^2.6.2"
  }
}
